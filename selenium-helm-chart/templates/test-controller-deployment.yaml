apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-test-controller
spec:
  completions: {{ .Values.testController.job.completions }}
  parallelism: {{ .Values.testController.job.parallelism }}
  backoffLimit: {{ .Values.testController.job.backoffLimit }}
  template:
    metadata:
      labels:
        app: test-controller
    spec:
      serviceAccountName: s3-access-sa
      restartPolicy: Never
      containers:
        - name: test-controller
          image: "{{ .Values.testController.image.repository }}:{{ .Values.testController.image.tag }}"
          imagePullPolicy: {{ .Values.testController.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.testController.image.resources.requests.memory }}"
              cpu: "{{ .Values.testController.image.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.testController.image.resources.limits.memory }}"
              cpu: "{{ .Values.testController.image.resources.limits.cpu }}"
      initContainers:
        - name: wait-for-chrome
          image: bitnami/kubectl  # Lightweight image with both curl and jq
          command:
            - "sh"
            - "-c"
            - |
              until curl -s http://chrome-node-service:4444/status | jq -e '.value.ready == true' > /dev/null; do
                echo "Waiting for Chrome node to be ready..."
                sleep 5
              done
              echo "Chrome node is ready!"
          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
